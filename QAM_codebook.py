import numpy as np

modulation = {}

modulation[2] = np.asarray([1, 0], dtype=np.cfloat)

#modulation[2] = np.asarray([1, -1], dtype=np.cfloat)

modulation[4] = np.asarray([1 +1j, -1 +1j, -1 -1j, 1 -1j], dtype=np.cfloat)

modulation[8] = np.asarray([1 +0, 1 +1j, 0 +1j, -1 +1j,
                           -1 -0, -1 -1j, 0 -1j, 1 -1j],
                             dtype=np.cfloat)

modulation[16] = np.asarray([-3 -3j, -3 -1j, -3 +3j, -3 +1j, #   0, 1, 2, 3
                           -1 -3j, -1 -1j, -1 +3j, -1 +1j, #   4, 5, 6, 7
                           +3 -3j, +3 -1j, +3 +3j, +3 +1j, #   8, 9, 10, 11
                           +1 -3j, +1 -1j, +1 +3j, +1 +1j],  #   12, 13, 14, 15
                           dtype=np.cfloat) * (1/3)


modulation[32] = np.asarray([-3+5j, -1+5j, -3-5j, -1-5j,   #0,1,2,3
                            -5+3j, -5+1j, -5-3j, -5-1j,   #4,5,6,7
                            -1+3j, -1+1j, -1-3j, -1-1j,   #8,9,10,11
                            -3+3j, -3+1j, -3-3j, -3-1j,   #12,13,14,15
                            +3+5j, 1+5j, 3-5j, 1-5j,      #16,17,18,19
                            +5+3j, 5+1j, 5-3j, 5-1j,      #20,21,22,23
                            +1+3j, 1+1j, 1-3j, 1-1j,      #24,25,26,27
                            +3+3j, 3+1j, 3-3j, 3-1j],      #28,29,30,31
                               dtype=np.cfloat) * (1/5)

modulation[64] = np.asarray([-7 -7j, -7 -5j, -7 -1j, -7 -3j,  #0, 1, 2, 3
                            -7 +7j, -7 +5j, -7 +1j, -7+ 3j,  #4, 5, 6, 7
                            -5 -7j, -5 -5j, -5 -1j, -5 -3j,  #8, 9, 10, 11
                            -5 +7j, -5 +5j, -5 +1j, -5 +3j,  #12, 13, 14, 15
                            -1 -7j, -1 -5j, -1 -1j, -1 -3j,  #16, 17, 18, 19
                            -1 +7j, -1 +5j, -1 +1j, -1 +3j,  #20, 21, 22, 23
                            -3 -7j, -3 -5j, -3 -1j, -3 -3j,  #24, 25, 26, 27
                            -3 +7j, -3 +5j, -3 +1j, -3 +3j,  #28, 29, 30, 31
                            7 -7j,  7 -5j,  7 -1j,  7 -3j,  #32, 33, 34, 35
                            7 +7j,  7 +5j,  7 +1j,  7 +3j,  #36, 37, 38, 39
                            5 -7j,  5 -5j,  5 -1j,  5 -3j,  #40, 41, 42, 43
                            5 +7j,  5 +5j,  5 +1j,  5 +3j,  #44, 45, 46, 47
                            1 -7j,  1 -5j,  1 -1j,  1 -3j,  #48, 49, 50, 51
                            1 +7j,  1 +5j,  1 +1j,  1 +3j,  #52, 53, 54, 55
                            3 -7j,  3 -5j,  3 -1j,  3 -3j,  #56, 57, 58, 59
                            3 +7j,  3 +5j,  3 +1j,  3 +3j],
                            dtype=np.cfloat) * (1/7)  #60, 61, 62, 63

modulation[128] = np.asarray([-7+9j, -7+11j, -1+9j, -1+11j,     #0, 1, 2, 3
                            -7-9j, -7-11j, -1-9j, -1-11j,     #4, 5, 6, 7
                            -5+9j, -5+11j, -3+9j, -3+11j,     #8, 9, 10, 11
                            -5-9j, -5-11j, -3-9j, -3-11j,     #12, 13, 14, 15
                            -9+7j, -9+5j, -9+1j, -9+3j,       #16, 17, 18, 19
                            -9-7j, -9-5j, -9-1j, -9-3j,       #20, 21, 22, 23
                            -11+7j, -11+5j, -11+1j, -11+3j,   #24, 25, 26, 27
                            -11-7j, -11-5j, -11-1j, -11-3j,   #28, 29, 30, 31
                            -1+7j, -1+5j, -1+1j, -1+3j,       #32, 33, 34, 35
                            -1-7j, -1-5j, -1-1j, -1-3j,       #36, 37, 38, 39
                            -3+7j, -3+5j, -3+1j, -3+3j,       #40, 41, 42, 43
                            -3-7j, -3-5j, -3-1j, -3-3j,       #44, 45, 46, 47
                            -7+7j, -7+5j, -7+1j, -7+3j,       #48, 49, 50, 51
                            -7-7j, -7-5j, -7-1j, -7-3j,       #52, 53, 54, 55
                            -5+7j, -5+5j, -5+1j, -5+3j,       #56, 57, 58, 59
                            -5-7j, -5-5j, -5-1j, -5-3j,       #60, 61, 62, 63
                            +7+9j, 7+11j, 1+9j, 1+11j,        #64, 65, 66, 67
                            +7-9j, 7-11j, 1-9j, 1-11j,        #68, 69, 70, 71
                            +5+9j, 5+11j, 3+9j, 3+11j,        #72, 73, 74, 75
                            +5-9j, 5-11j, 3-9j, 3-11j,        #76, 77, 78, 79
                            +9+7j, 9+5j, 9+1j, 9+3j,          #80, 81, 82, 83
                            +9-7j, 9-5j, 9-1j, 9-3j,          #84, 85, 86, 87
                            +11+7j, 11+5j, 11+1j, 11+3j,      #88, 89, 90, 91
                            +11-7j, 11-5j, 11-1j, 11-3j,      #92, 93, 94, 95
                            +1+7j, 1+5j, 1+1j, 1+3j,          #96, 97, 98, 99
                            +1-7j, 1-5j, 1-1j, 1-3j,          #100, 101, 102, 103
                            +3+7j, 3+5j, 3+1j, 3+3j,          #104, 105, 106, 107
                            +3-7j, 3-5j, 3-1j, 3-3j,          #108, 109, 110, 111
                            +7+7j, 7+5j, 7+1j, 7+3j,          #112, 113, 114, 115
                            +7-7j, 7-5j, 7-1j, 7-3j,          #116, 117, 118, 119
                            +5+7j, 5+5j, 5+1j, 5+3j,          #120, 121, 122, 123
                            +5-7j, 5-5j, 5-1j, 5-3j],   dtype=np.cfloat) * (1/11)    #124, 125, 126, 127

